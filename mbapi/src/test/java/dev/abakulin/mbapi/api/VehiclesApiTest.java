/*
 * Experimental Connected Vehicle API
 * An experimental Connected Vehicle API that allows to request vehicle data and to send commands to the virtual car simulator.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package dev.abakulin.mbapi.api;

import dev.abakulin.mbapi.ApiException;
import dev.abakulin.mbapi.model.ErrorResponse;
import dev.abakulin.mbapi.model.VehicleDetail;
import dev.abakulin.mbapi.model.Vehicles;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VehiclesApi
 */
@Ignore
public class VehiclesApiTest {

    private final VehiclesApi api = new VehiclesApi();

    
    /**
     * Find all vehicles.
     *
     * List all of the user&#39;s vehicles.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllVehiclesTest() throws ApiException {
        Vehicles response = api.getAllVehicles();

        // TODO: test validations
    }
    
    /**
     * Get vehicle by ID.
     *
     * Returns detailed information about the vehicle like its licensplate, sales designation or its FIN or VIN.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVehicleByIdTest() throws ApiException {
        String vehicleId = null;
        VehicleDetail response = api.getVehicleById(vehicleId);

        // TODO: test validations
    }
    
}
