/*
 * Experimental Connected Vehicle API
 * An experimental Connected Vehicle API that allows to request vehicle data and to send commands to the virtual car simulator.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package dev.abakulin.mbapi.api;

import dev.abakulin.mbapi.ApiException;
import dev.abakulin.mbapi.model.DoorLockChangeRequestBody;
import dev.abakulin.mbapi.model.DoorLockChangedStatus;
import dev.abakulin.mbapi.model.Doors;
import dev.abakulin.mbapi.model.ErrorResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DoorsApi
 */
@Ignore
public class DoorsApiTest {

    private final DoorsApi api = new DoorsApi();

    
    /**
     * Get the status of all doors of the vehicle.
     *
     * Returns status of all doors of the vehicle. It informs about each door if it is locked, unlocked, open or closed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDoorsStatusTest() throws ApiException {
        String vehicleId = null;
        Doors response = api.getDoorsStatus(vehicleId);

        // TODO: test validations
    }
    
    /**
     * Locks or unlocks all doors of the vehicle.
     *
     * Locks or unlocks all doors of the vehicle.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postDoorsTest() throws ApiException {
        String vehicleId = null;
        DoorLockChangeRequestBody body = null;
        DoorLockChangedStatus response = api.postDoors(vehicleId, body);

        // TODO: test validations
    }
    
}
